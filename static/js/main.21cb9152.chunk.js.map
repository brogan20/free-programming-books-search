{"version":3,"sources":["components/LangDropdown.js","components/SearchBar.js","components/SearchResult.js","components/LightSwitch.js","App.js","img/sun.png","img/moon.png","reportWebVitals.js","index.js"],"names":["LangDropdown","options","changeParameter","data","useState","languages","setLanguages","useEffect","langArray","children","forEach","document","language","name","length","push","sort","a","b","map","class","value","code","createOption","onChange","e","target","id","SearchBar","props","onSubmit","preventDefault","autoComplete","type","placeholder","SearchResult","href","url","lang","title","author","LightSwitch","fpb","jsonToArray","json","arr","sections","section","includes","entries","entry","subsections","subsection","App","undefined","setData","dataArray","setDataArray","setIndex","loading","setLoading","searchParams","setSearchParams","searchResults","setSearchResults","sectionResults","setSectionResults","error","resultsList","sectionResultsList","param","axios","get","result","fetchData","fuse","Fuse","useExtendedSearch","findAllMatches","shouldSort","includeScore","threshold","keys","query","Object","key","search","$and","slice","sResults","item","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.21cb9152.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction LangDropdown({ changeParameter, data }) {\r\n  const [languages, setLanguages] = useState([]);\r\n  let options = null;\r\n\r\n  const handleChange = (e) => {\r\n    changeParameter(\"lang.code\", e.target.value);\r\n  };\r\n\r\n  useEffect(\r\n    // run whenever data changes\r\n    () => {\r\n      if (data) {\r\n        let langArray = [];\r\n        data.children[0].children.forEach((document) => {\r\n          if (\r\n            typeof document.language.name === \"string\" &&\r\n            document.language.name.length > 0\r\n          ) {\r\n            //make sure the language is valid and not blank\r\n            //console.log(\"LANGUAGE: \" + document.language.name)\r\n            langArray.push(document.language);\r\n          }\r\n        });\r\n        langArray.sort((a, b) => a.name > b.name);\r\n        setLanguages(langArray);\r\n      }\r\n    },\r\n    [data]\r\n  );\r\n\r\n  const createOption = (language) => {\r\n    return (\r\n      <option class=\"lang\" key={language.code} value={language.code}>\r\n        {language.name}\r\n      </option>\r\n    );\r\n  };\r\n\r\n  options =\r\n    languages &&\r\n    languages.map((language) => {\r\n      return createOption(language);\r\n    });\r\n  // console.log(options);\r\n  return (\r\n    <select onChange={handleChange} name=\"languages\" id=\"languages\">\r\n      <option key=\"allLangs\" value=\"\">\r\n        All Languages\r\n      </option>\r\n      {options}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default LangDropdown;\r\n","import React from \"react\";\r\n\r\nfunction SearchBar(props) {\r\n  const handleChange = (e) => {\r\n    props.changeParameter(\"title\", e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n      }}\r\n      name=\"searchBar\"\r\n    >\r\n      <input\r\n        autoComplete=\"off\"\r\n        type=\"text\"\r\n        name=\"searchTerm\"\r\n        placeholder=\"Enter Book Name\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\n\r\nfunction SearchResult({ data }) {\r\n  return (\r\n    <li class=\"result\">\r\n        <a href={data.url} target=\"_blank\">\r\n        ({data.lang.code}) {data.title} by {data.author ? data.author : \"Unknown Author\"}\r\n        </a>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default SearchResult;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction LightSwitch(App){\r\n\tconst [lightMode, setLightMode] = useState(false);\r\n\treturn (\r\n\t\t<img src={lightMode ? \"https://toppng.com/uploads/preview/sun-11545692406nbrflpmao0.png\" : \"https://www.kindpng.com/picc/m/293-2939577_clip-art-drawing-of-moon-and-stars-star.png\"}\r\n\t\tonClick = {()=>setLightMode(!lightMode)} style={{width: \"100px\", height: \"100px\",display: \"block\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  marginLeft: \"auto\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  marginRight: \"auto\",\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t  }}/>\r\n\t)\r\n}\r\n\r\nexport default LightSwitch;","import React, { useState, useEffect } from \"react\";\r\nimport LangDropdown from \"./components/LangDropdown\";\r\nimport SearchBar from \"./components/SearchBar\";\r\nimport SearchResult from \"./components/SearchResult\";\r\nimport LightSwitch from \"./components/LightSwitch\";\r\nimport axios from \"axios\";\r\nimport Fuse from \"fuse.js\";\r\n\r\nimport SunImg from \"./img/sun.png\";\r\nimport MoonImg from \"./img/moon.png\";\r\n\r\nconst fpb = null;\r\n\r\n// eslint-disable-next-line\r\nfunction makeBook(author, hLang, cLang, title, url) {\r\n  //returns a struct with basic book info (author, human language, computer language, book title, url)\r\n  return {\r\n    author: author,\r\n    hLang: hLang, //human language\r\n    cLang: cLang, //computer language\r\n    title: title,\r\n    url: url,\r\n  };\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction forEachBook(func, json) {\r\n  //Runs func on each section, entry, and book in json, which is a list of entries\r\n  if (typeof func !== \"function\") {\r\n    // eslint-disable-next-line\r\n    throw \"ERROR in forEachBook: parameter not a fucntion\";\r\n  }\r\n\r\n  for (const hLang in json) {\r\n    //for each human language\r\n    if (Array.isArray(hLang.sections)) {\r\n      //check if sections is an array\r\n      hLang.sections.forEach(\r\n        (\r\n          cLang //for each computer lanuage\r\n        ) => {\r\n          if (Array.isArray(cLang.entries)) {\r\n            //verify is entries is an array\r\n            cLang.entries.forEach(\r\n              (\r\n                book //for each book\r\n              ) => {\r\n                if (typeof book === \"object\") {\r\n                  //verify that book is an object\r\n                  func(json[hLang], cLang, book); //run the function\r\n                }\r\n              }\r\n            );\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\n// Sorts search results by their score\r\n// eslint-disable-next-line\r\nfunction sortByScore(results) {\r\n  results.sort(function (a, b) {\r\n    return a.score - b.score;\r\n  });\r\n  return results;\r\n}\r\n\r\nfunction jsonToArray(json) {\r\n  let arr = [];\r\n  let sections = [];\r\n  json.children[0].children.forEach((document) => {\r\n    document.sections.forEach((section) => {\r\n      if (!sections.includes(section.section)) sections.push(section.section);\r\n      section.entries.forEach((entry) => {\r\n        arr.push({\r\n          author: entry.author,\r\n          title: entry.title,\r\n          url: entry.url,\r\n          lang: document.language,\r\n          section: section.section,\r\n        });\r\n      });\r\n      section.subsections.forEach((subsection) => {\r\n        subsection.entries.forEach((entry) => {\r\n          arr.push({\r\n            author: entry.author,\r\n            title: entry.title,\r\n            url: entry.url,\r\n            lang: document.language,\r\n            section: section.section,\r\n            subsection: subsection.section,\r\n          });\r\n        });\r\n      });\r\n    });\r\n  });\r\n  return { arr: arr, sections: sections };\r\n}\r\n\r\nfunction App() {\r\n  const [data, setData] = useState(undefined); // keeps the state of the json\r\n  const [dataArray, setDataArray] = useState([]); // put everything into one array. uses more memory, but search is faster and less complex\r\n  // eslint-disable-next-line\r\n  const [index, setIndex] = useState([]); // used for \"table of contents\". currently unused\r\n  const [loading, setLoading] = useState(true); // Determines whether to show spinner\r\n  const [searchParams, setSearchParams] = useState({ title: \"\" });\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [sectionResults, setSectionResults] = useState([]);\r\n  const [lightMode, setLightMode] = useState(true);\r\n\r\n  // eslint-disable-next-line\r\n  const [error, setError] = useState(\"\");\r\n\r\n  let resultsList = null; // the html string containing the search results\r\n  let sectionResultsList = null;\r\n\r\n  const changeParameter = (param, value) => {\r\n    // Lets a child component set the value of the search term\r\n    setSearchParams({ ...searchParams, [param]: value });\r\n  };\r\n\r\n  // fetches data the first time the page renders\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      try {\r\n        setLoading(true);\r\n        let result = await axios.get(\r\n          \"https://raw.githubusercontent.com/FreeEbookFoundationBot/free-programming-books-json/main/fpb.json\"\r\n        );\r\n        setData(result.data);\r\n        let { arr, sections } = jsonToArray(result.data);\r\n        setDataArray(arr);\r\n        setIndex(sections);\r\n      } catch (e) {\r\n        // setError(\"Couldn't get data. Please try again later\")\r\n        setData(fpb);\r\n        let { arr, sections } = jsonToArray(fpb);\r\n        setIndex(sections);\r\n        setDataArray(arr);\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // fires when searchTerm changes\r\n  // THIS IS THE MAIN SEARCH FUNCTION CURRENTLY\r\n  useEffect(() => {\r\n    if (dataArray) {\r\n      // Finds most relevant titles\r\n      const fuseOptions = {\r\n        useExtendedSearch: true,\r\n        findAllMatches: true,\r\n        shouldSort: true,\r\n        includeScore: true,\r\n        threshold: 0.2,\r\n        keys: [\"title\", \"lang.code\"],\r\n      };\r\n\r\n      let fuse = new Fuse(dataArray, fuseOptions);\r\n      let query = [];\r\n      for (const [key, value] of Object.entries(searchParams)) {\r\n        if (value === null || value === \"\") continue;\r\n        if (key === \"lang.code\") {\r\n          query.push({ \"lang.code\": `^${value}` });\r\n          continue;\r\n        }\r\n        query.push({ [key]: value });\r\n      }\r\n      let result = fuse.search({\r\n        $and: query,\r\n      });\r\n      result = result.slice(0, 40);\r\n      setSearchResults(result);\r\n\r\n      let sResults = []; // section results\r\n      // Finds the most relevant sections\r\n      result.forEach((entry) => {\r\n        let section = entry.item.section;\r\n        if (!sResults.includes(section)) sResults.push(section);\r\n      });\r\n      setSectionResults(sResults);\r\n    }\r\n  }, [searchParams, dataArray]);\r\n\r\n  if (loading) {\r\n    // if still fetching resource\r\n    return <h1>Loading...</h1>;\r\n  }\r\n  if (error) {\r\n    return <h1>Error: {error}</h1>;\r\n  }\r\n  if (searchParams.title && searchResults.length !== 0) {\r\n    resultsList =\r\n      searchResults &&\r\n      searchResults.map((entry) => {\r\n        return <SearchResult data={entry.item} />;\r\n      });\r\n    sectionResultsList =\r\n      sectionResults &&\r\n      sectionResults.map((section) => {\r\n        return <li>{section}</li>;\r\n      });\r\n  }\r\n  return (\r\n    <div\r\n      className=\"frontPage\"\r\n      // style={{\r\n      //   color: lightMode ? \"black\" : \"white\",\r\n      //   backgroundColor: lightMode ? \"white\" : \"black\",\r\n      // }}\r\n    >\r\n      <div className=\"header\">\r\n        {/* <img\r\n          src={lightMode ? SunImg : MoonImg}\r\n          onClick={() => setLightMode(!lightMode)}\r\n          style={{\r\n            width: \"100px\",\r\n            height: \"100px\",\r\n            display: \"block\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n          }}\r\n        /> */}\r\n        <h1>Free Programming Books</h1>\r\n        <div>\r\n          <SearchBar changeParameter={changeParameter} />\r\n          <LangDropdown changeParameter={changeParameter} data={data} />\r\n        </div>\r\n        <br />\r\n        <a href=\"https://github.com/EbookFoundation/free-programming-books\">\r\n          View the Project on GitHub\r\n          <br />\r\n          <small>EbookFoundation/free-programming-books</small>\r\n        </a>\r\n        <br />\r\n        <br />\r\n        <a\r\n          href=\"https://github.com/EbookFoundation/free-programming-books/issues/\"\r\n          target=\"_blank\"\r\n        >\r\n          Report an error on GitHub\r\n        </a>\r\n        <h2>Section Results</h2>\r\n        {sectionResultsList && <p>This feature is not complete!</p>}\r\n        <div className=\"section-results\">{sectionResultsList}</div>\r\n      </div>\r\n      <div>\r\n        <h2>Top Results</h2>\r\n        <ul className=\"search-results\">{resultsList}</ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","export default __webpack_public_path__ + \"static/media/sun.d499a97b.png\";","export default __webpack_public_path__ + \"static/media/moon.6ad80c47.png\";","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './App.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}